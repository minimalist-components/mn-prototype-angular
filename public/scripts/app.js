"use strict";function ApiConfig(RestangularProvider){RestangularProvider.setBaseUrl("https://private-a82ea-samples9.apiary-mock.com")}function appConfig($locationProvider,$stateProvider){$locationProvider.html5Mode(!0),$stateProvider.state("app",{"abstract":!0,views:{main:{templateUrl:"templates/app.template.html"}}})}function AuthenticationConfig($authProvider){$authProvider.loginUrl="",$authProvider.authHeader="Authorization",$authProvider.tokenType="Bearer",$authProvider.authToken="",$authProvider.storageType="localStorage"}function AuthenticationService($auth){this.login=function(user){return $auth.login(user)},this.logout=function(){return $auth.logout()},this.status=function(){return $auth.isAuthenticated()},this.user=function(){return $auth.getPayload()}}function loadingConfig(cfpLoadingBarProvider){cfpLoadingBarProvider.includeSpinner=!1,cfpLoadingBarProvider.includeBar=!0}function LoginConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{main:{templateUrl:"templates/login.template.html",controller:"LoginController",controllerAs:"login"}}})}function LoginController(AuthenticationService,$state){function authenticate(){function redirectToHome(){$state.go("app.home")}AuthenticationService.login(this.credentials).then(redirectToHome)}var username=void 0,password=void 0;this.credentials={username:username,password:password},this.authenticate=authenticate}function LoginRun($rootScope,$state,AuthenticationService){function requireAuthentication(event,toState){toState.name.startsWith("app."),AuthenticationService.status();return!1}$rootScope.$on("$stateChangeStart",requireAuthentication)}function HomeConfig($stateProvider){$stateProvider.state("app.home",{url:"/",redirectTo:"app.users"})}function UsersConfig($stateProvider){$stateProvider.state("app.users",{url:"/users",views:{"content@app":{templateUrl:"templates/users-list.template.html",controller:"UsersController",controllerAs:"users",resolve:{list:function(Users){return Users.list()},data:function(){return null}}}}}).state("app.users.create",{url:"/create",views:{"content@app":{templateUrl:"templates/users-form.template.html",controller:"UsersController",controllerAs:"users",resolve:{list:function(){return null},data:function(){return null}}}}}).state("app.users.edit",{url:"/:id",views:{"content@app":{templateUrl:"templates/users-form.template.html",controller:"UsersController",controllerAs:"users",resolve:{list:function(){return null},data:function(Users){return Users.get("johnsnow")}}}}})}function UsersController(list,data){function save(){console.log(this.data)}this.list=list,this.data=data,this.save=save}function UsersService(Restangular){function list(){return resource.getList()}function get(id){return resource.one(id).get()}var resource=Restangular.service("users");this.list=list,this.get=get}function PromisesConfig($qProvider){$qProvider.errorOnUnhandledRejections(!1)}angular.module("prototype",["ui.router","ui.router.redirect","satellizer","mn-form","mn-input","restangular","angular-loading-bar","ngAnimate"]),ApiConfig.$inject=["RestangularProvider"],angular.module("prototype").config(ApiConfig),appConfig.$inject=["$locationProvider","$stateProvider"],angular.module("prototype").config(appConfig),AuthenticationConfig.$inject=["$authProvider"],angular.module("prototype").config(AuthenticationConfig),AuthenticationService.$inject=["$auth"],angular.module("prototype").service("AuthenticationService",AuthenticationService),loadingConfig.$inject=["cfpLoadingBarProvider"],angular.module("prototype").config(loadingConfig),LoginConfig.$inject=["$stateProvider"],angular.module("prototype").config(LoginConfig),LoginController.$inject=["AuthenticationService","$state"],angular.module("prototype").controller("LoginController",LoginController),LoginRun.$inject=["$rootScope","$state","AuthenticationService"],angular.module("prototype").run(LoginRun),HomeConfig.$inject=["$stateProvider"],angular.module("prototype").config(HomeConfig),UsersConfig.$inject=["$stateProvider"],angular.module("prototype").config(UsersConfig),UsersController.$inject=["list","data"],angular.module("prototype").controller("UsersController",UsersController),UsersService.$inject=["Restangular"],angular.module("prototype").service("Users",UsersService),PromisesConfig.$inject=["$qProvider"],angular.module("prototype").config(PromisesConfig);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFwaS9hcGkuY29uZmlnLmpzIiwiYXBwL2FwcC5jb25maWcuanMiLCJhdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5jb25maWcuanMiLCJhdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5zZXJ2aWNlLmpzIiwibG9hZGluZy1iYXIvbG9hZGluZy1iYXIuY29uZmlnLmpzIiwibG9naW4vbG9naW4uY29uZmlnLmpzIiwibG9naW4vbG9naW4uY29udHJvbGxlci5qcyIsImxvZ2luL2xvZ2luLnJ1bi5qcyIsImhvbWUvaG9tZS5jb25maWcuanMiLCJ1c2Vycy91c2Vycy5jb25maWcuanMiLCJ1c2Vycy91c2Vycy5jb250cm9sbGVyLmpzIiwidXNlcnMvdXNlcnMuc2VydmljZS5qcyIsInByb21pc2VzL3Byb21pc2VzLmNvbmZpZy5qcyJdLCJuYW1lcyI6WyJBcGlDb25maWciLCJSZXN0YW5ndWxhclByb3ZpZGVyIiwic2V0QmFzZVVybCIsImFwcENvbmZpZyIsIiRsb2NhdGlvblByb3ZpZGVyIiwiJHN0YXRlUHJvdmlkZXIiLCJodG1sNU1vZGUiLCJzdGF0ZSIsImFic3RyYWN0Iiwidmlld3MiLCJtYWluIiwidGVtcGxhdGVVcmwiLCJBdXRoZW50aWNhdGlvbkNvbmZpZyIsIiRhdXRoUHJvdmlkZXIiLCJsb2dpblVybCIsImF1dGhIZWFkZXIiLCJ0b2tlblR5cGUiLCJhdXRoVG9rZW4iLCJzdG9yYWdlVHlwZSIsIkF1dGhlbnRpY2F0aW9uU2VydmljZSIsIiRhdXRoIiwidGhpcyIsImxvZ2luIiwidXNlciIsImxvZ291dCIsInN0YXR1cyIsImlzQXV0aGVudGljYXRlZCIsImdldFBheWxvYWQiLCJsb2FkaW5nQ29uZmlnIiwiY2ZwTG9hZGluZ0JhclByb3ZpZGVyIiwiaW5jbHVkZVNwaW5uZXIiLCJpbmNsdWRlQmFyIiwiTG9naW5Db25maWciLCJ1cmwiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIiwiTG9naW5Db250cm9sbGVyIiwiJHN0YXRlIiwiYXV0aGVudGljYXRlIiwicmVkaXJlY3RUb0hvbWUiLCJnbyIsImNyZWRlbnRpYWxzIiwidGhlbiIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJMb2dpblJ1biIsIiRyb290U2NvcGUiLCJyZXF1aXJlQXV0aGVudGljYXRpb24iLCJldmVudCIsInRvU3RhdGUiLCJuYW1lIiwic3RhcnRzV2l0aCIsIiRvbiIsIkhvbWVDb25maWciLCJyZWRpcmVjdFRvIiwiVXNlcnNDb25maWciLCJjb250ZW50QGFwcCIsInJlc29sdmUiLCJsaXN0IiwiVXNlcnMiLCJkYXRhIiwiZ2V0IiwiVXNlcnNDb250cm9sbGVyIiwic2F2ZSIsImNvbnNvbGUiLCJsb2ciLCJVc2Vyc1NlcnZpY2UiLCJSZXN0YW5ndWxhciIsInJlc291cmNlIiwiZ2V0TGlzdCIsImlkIiwib25lIiwic2VydmljZSIsIlByb21pc2VzQ29uZmlnIiwiJHFQcm92aWRlciIsImVycm9yT25VbmhhbmRsZWRSZWplY3Rpb25zIiwiYW5ndWxhciIsIm1vZHVsZSIsIiRpbmplY3QiLCJjb25maWciLCJydW4iXSwibWFwcGluZ3MiOiJBQUFBLFlDSUEsU0FBU0EsV0FBVUMscUJBQ2pCQSxvQkFBb0JDLFdBQVcsa0RDRGpDLFFBQVNDLFdBQVVDLGtCQUFtQkMsZ0JBQ3BDRCxrQkFBa0JFLFdBQVUsR0FFNUJELGVBQWVFLE1BQU0sT0FDbkJDLFlBQVUsRUFDVkMsT0FDRUMsTUFDRUMsWUFBYSxrQ0NQckIsUUFBU0Msc0JBQXFCQyxlQUM1QkEsY0FBY0MsU0FBVyxHQUN6QkQsY0FBY0UsV0FBYSxnQkFDM0JGLGNBQWNHLFVBQVksU0FDMUJILGNBQWNJLFVBQVksR0FDMUJKLGNBQWNLLFlBQWMsZUNMOUIsUUFBU0MsdUJBQXNCQyxPQUM3QkMsS0FBS0MsTUFBUSxTQUFBQyxNQUFBLE1BQUFILE9BQUFFLE1BQUFDLE9BQ2JGLEtBQUtHLE9BQVMsV0FBQSxNQUFBSixPQUFBSSxVQUNkSCxLQUFLSSxPQUFTLFdBQUEsTUFBQUwsT0FBQU0sbUJBQ2RM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QUFTaUMsU0FBVyxhQUFjLFNBQVUseUJBRDVDRixRQUNHQyxPQUFPLGFBQ1BHLElBQUluQyxVQ0RQUSxXQUFXeUIsU0FBVyxrQkFEdEJGLFFBQ0dDLE9BQU8sYUFDUEUsT0FBTzFCLFlDRFZFLFlBQVl1QixTQUFXLGtCQUR2QkYsUUFDR0MsT0FBTyxhQUNQRSxPQUFPeEIsYUNEVk8sZ0JBQWdCZ0IsU0FBVyxPQUFRLFFBRG5DRixRQUNHQyxPQUFPLGFBQ1AzQyxXQUFXLGtCQUFtQjRCLGlCQ0RqQ0ksYUFBYVksU0FBVyxlQUR4QkYsUUFDR0MsT0FBTyxhQUNQTCxRQUFRLFFBQVNOLGNDRHBCTyxlQUFlSyxTQUFXLGNBRDFCRixRQUNHQyxPQUFPLGFBQ1BFLE9BQU9OIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdwcm90b3R5cGUnLCBbXG4gICd1aS5yb3V0ZXInLFxuICAndWkucm91dGVyLnJlZGlyZWN0JyxcbiAgJ3NhdGVsbGl6ZXInLFxuICAnbW4tZm9ybScsXG4gICdtbi1pbnB1dCcsXG4gICdyZXN0YW5ndWxhcicsXG4gICdhbmd1bGFyLWxvYWRpbmctYmFyJyxcbiAgJ25nQW5pbWF0ZScsXG5dKVxuIiwiYW5ndWxhclxuICAubW9kdWxlKCdwcm90b3R5cGUnKVxuICAuY29uZmlnKEFwaUNvbmZpZylcblxuZnVuY3Rpb24gQXBpQ29uZmlnKFJlc3Rhbmd1bGFyUHJvdmlkZXIpIHtcbiAgUmVzdGFuZ3VsYXJQcm92aWRlci5zZXRCYXNlVXJsKCdodHRwczovL3ByaXZhdGUtYTgyZWEtc2FtcGxlczkuYXBpYXJ5LW1vY2suY29tJylcbn1cbiIsImFuZ3VsYXJcbiAgLm1vZHVsZSgncHJvdG90eXBlJylcbiAgLmNvbmZpZyhhcHBDb25maWcpXG5cbmZ1bmN0aW9uIGFwcENvbmZpZygkbG9jYXRpb25Qcm92aWRlciwgJHN0YXRlUHJvdmlkZXIpIHtcbiAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpXG5cbiAgJHN0YXRlUHJvdmlkZXIuc3RhdGUoJ2FwcCcsIHtcbiAgICBhYnN0cmFjdDogdHJ1ZSxcbiAgICB2aWV3czoge1xuICAgICAgbWFpbjoge1xuICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy9hcHAudGVtcGxhdGUuaHRtbCcsXG4gICAgICB9LFxuICAgIH0sXG4gIH0pXG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5jb25maWcoQXV0aGVudGljYXRpb25Db25maWcpXG5cbmZ1bmN0aW9uIEF1dGhlbnRpY2F0aW9uQ29uZmlnKCRhdXRoUHJvdmlkZXIpIHtcbiAgJGF1dGhQcm92aWRlci5sb2dpblVybCA9ICcnXG4gICRhdXRoUHJvdmlkZXIuYXV0aEhlYWRlciA9ICdBdXRob3JpemF0aW9uJ1xuICAkYXV0aFByb3ZpZGVyLnRva2VuVHlwZSA9ICdCZWFyZXInXG4gICRhdXRoUHJvdmlkZXIuYXV0aFRva2VuID0gJydcbiAgJGF1dGhQcm92aWRlci5zdG9yYWdlVHlwZSA9ICdsb2NhbFN0b3JhZ2UnXG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5zZXJ2aWNlKCdBdXRoZW50aWNhdGlvblNlcnZpY2UnLCBBdXRoZW50aWNhdGlvblNlcnZpY2UpXG5cbmZ1bmN0aW9uIEF1dGhlbnRpY2F0aW9uU2VydmljZSgkYXV0aCkge1xuICB0aGlzLmxvZ2luID0gdXNlciA9PiAkYXV0aC5sb2dpbih1c2VyKVxuICB0aGlzLmxvZ291dCA9ICgpID0+ICRhdXRoLmxvZ291dCgpXG4gIHRoaXMuc3RhdHVzID0gKCkgPT4gJGF1dGguaXNBdXRoZW50aWNhdGVkKClcbiAgdGhpcy51c2VyID0gKCkgPT4gJGF1dGguZ2V0UGF5bG9hZCgpXG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5jb25maWcobG9hZGluZ0NvbmZpZylcblxuZnVuY3Rpb24gbG9hZGluZ0NvbmZpZyhjZnBMb2FkaW5nQmFyUHJvdmlkZXIpIHtcbiAgY2ZwTG9hZGluZ0JhclByb3ZpZGVyLmluY2x1ZGVTcGlubmVyID0gZmFsc2VcbiAgY2ZwTG9hZGluZ0JhclByb3ZpZGVyLmluY2x1ZGVCYXIgPSB0cnVlXG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5jb25maWcoTG9naW5Db25maWcpXG5cbmZ1bmN0aW9uIExvZ2luQ29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICRzdGF0ZVByb3ZpZGVyLnN0YXRlKCdsb2dpbicsIHtcbiAgICB1cmw6ICcvbG9naW4nLFxuICAgIHZpZXdzOiB7XG4gICAgICAnbWFpbic6IHtcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZXMvbG9naW4udGVtcGxhdGUuaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdMb2dpbkNvbnRyb2xsZXInLFxuICAgICAgICBjb250cm9sbGVyQXM6ICdsb2dpbicsXG4gICAgICB9LFxuICAgIH0sXG4gIH0pXG59XG5cbiIsImFuZ3VsYXJcbiAgLm1vZHVsZSgncHJvdG90eXBlJylcbiAgLmNvbnRyb2xsZXIoJ0xvZ2luQ29udHJvbGxlcicsIExvZ2luQ29udHJvbGxlcilcblxuZnVuY3Rpb24gTG9naW5Db250cm9sbGVyKEF1dGhlbnRpY2F0aW9uU2VydmljZSwgJHN0YXRlKSB7XG4gIGxldCB1c2VybmFtZVxuICBsZXQgcGFzc3dvcmRcblxuICB0aGlzLmNyZWRlbnRpYWxzID0ge1xuICAgIHVzZXJuYW1lLFxuICAgIHBhc3N3b3JkLFxuICB9XG5cbiAgdGhpcy5hdXRoZW50aWNhdGUgPSBhdXRoZW50aWNhdGVcblxuICBmdW5jdGlvbiBhdXRoZW50aWNhdGUoKSB7XG4gICAgQXV0aGVudGljYXRpb25TZXJ2aWNlXG4gICAgICAubG9naW4odGhpcy5jcmVkZW50aWFscylcbiAgICAgIC50aGVuKHJlZGlyZWN0VG9Ib21lKVxuXG4gICAgZnVuY3Rpb24gcmVkaXJlY3RUb0hvbWUoKSB7XG4gICAgICAkc3RhdGUuZ28oJ2FwcC5ob21lJylcbiAgICB9XG4gIH1cbn1cbiIsImFuZ3VsYXJcbiAgLm1vZHVsZSgncHJvdG90eXBlJylcbiAgLnJ1bihMb2dpblJ1bilcblxuZnVuY3Rpb24gTG9naW5SdW4oJHJvb3RTY29wZSwgJHN0YXRlLCBBdXRoZW50aWNhdGlvblNlcnZpY2UpIHtcbiAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN0YXJ0JywgcmVxdWlyZUF1dGhlbnRpY2F0aW9uKVxuXG4gIGZ1bmN0aW9uIHJlcXVpcmVBdXRoZW50aWNhdGlvbihldmVudCwgdG9TdGF0ZSkge1xuICAgIGxldCBzdGF0ZVJlcXVpcmVMb2dpbiA9IHRvU3RhdGUubmFtZS5zdGFydHNXaXRoKCdhcHAuJylcbiAgICBsZXQgaXNBdXRoZW50aWNhdGVkID0gQXV0aGVudGljYXRpb25TZXJ2aWNlLnN0YXR1cygpXG4gICAgcmV0dXJuIGZhbHNlXG5cbiAgICBpZiAoc3RhdGVSZXF1aXJlTG9naW4gJiYgIWlzQXV0aGVudGljYXRlZCkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgJHN0YXRlLmdvKCdsb2dpbicpXG4gICAgfVxuICB9XG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5jb25maWcoSG9tZUNvbmZpZylcblxuZnVuY3Rpb24gSG9tZUNvbmZpZygkc3RhdGVQcm92aWRlcikge1xuICAkc3RhdGVQcm92aWRlclxuICAgIC5zdGF0ZSgnYXBwLmhvbWUnLCB7XG4gICAgICB1cmw6ICcvJyxcbiAgICAgIHJlZGlyZWN0VG86ICdhcHAudXNlcnMnLFxuICAgIH0pXG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5jb25maWcoVXNlcnNDb25maWcpXG5cbmZ1bmN0aW9uIFVzZXJzQ29uZmlnKCRzdGF0ZVByb3ZpZGVyKSB7XG4gICRzdGF0ZVByb3ZpZGVyXG4gICAgLnN0YXRlKCdhcHAudXNlcnMnLCB7XG4gICAgICB1cmw6ICcvdXNlcnMnLFxuICAgICAgdmlld3M6IHtcbiAgICAgICAgJ2NvbnRlbnRAYXBwJzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGVzL3VzZXJzLWxpc3QudGVtcGxhdGUuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ1VzZXJzQ29udHJvbGxlcicsXG4gICAgICAgICAgY29udHJvbGxlckFzOiAndXNlcnMnLFxuICAgICAgICAgIHJlc29sdmU6IHtcbiAgICAgICAgICAgIGxpc3Q6IFVzZXJzID0+IFVzZXJzLmxpc3QoKSxcbiAgICAgICAgICAgIGRhdGE6ICgpID0+IG51bGwsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSlcbiAgICAuc3RhdGUoJ2FwcC51c2Vycy5jcmVhdGUnLCB7XG4gICAgICB1cmw6ICcvY3JlYXRlJyxcbiAgICAgIHZpZXdzOiB7XG4gICAgICAgICdjb250ZW50QGFwcCc6IHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy91c2Vycy1mb3JtLnRlbXBsYXRlLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdVc2Vyc0NvbnRyb2xsZXInLFxuICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VzZXJzJyxcbiAgICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgICBsaXN0OiAoKSA9PiBudWxsLFxuICAgICAgICAgICAgZGF0YTogKCkgPT4gbnVsbCxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KVxuICAgIC5zdGF0ZSgnYXBwLnVzZXJzLmVkaXQnLCB7XG4gICAgICB1cmw6ICcvOmlkJyxcbiAgICAgIHZpZXdzOiB7XG4gICAgICAgICdjb250ZW50QGFwcCc6IHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlcy91c2Vycy1mb3JtLnRlbXBsYXRlLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdVc2Vyc0NvbnRyb2xsZXInLFxuICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3VzZXJzJyxcbiAgICAgICAgICByZXNvbHZlOiB7XG4gICAgICAgICAgICBsaXN0OiAoKSA9PiBudWxsLFxuICAgICAgICAgICAgZGF0YTogVXNlcnMgPT4gVXNlcnMuZ2V0KCdqb2huc25vdycpXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSlcbn1cbiIsImFuZ3VsYXJcbiAgLm1vZHVsZSgncHJvdG90eXBlJylcbiAgLmNvbnRyb2xsZXIoJ1VzZXJzQ29udHJvbGxlcicsIFVzZXJzQ29udHJvbGxlcilcblxuZnVuY3Rpb24gVXNlcnNDb250cm9sbGVyKGxpc3QsIGRhdGEpIHtcbiAgdGhpcy5saXN0ID0gbGlzdFxuICB0aGlzLmRhdGEgPSBkYXRhXG5cbiAgdGhpcy5zYXZlID0gc2F2ZVxuXG4gIGZ1bmN0aW9uIHNhdmUoKSB7XG4gICAgY29uc29sZS5sb2codGhpcy5kYXRhKVxuICB9XG59XG4iLCJhbmd1bGFyXG4gIC5tb2R1bGUoJ3Byb3RvdHlwZScpXG4gIC5zZXJ2aWNlKCdVc2VycycsIFVzZXJzU2VydmljZSlcblxuZnVuY3Rpb24gVXNlcnNTZXJ2aWNlKFJlc3Rhbmd1bGFyKSB7XG4gIGNvbnN0IHJlc291cmNlID0gUmVzdGFuZ3VsYXIuc2VydmljZSgndXNlcnMnKVxuXG4gIHRoaXMubGlzdCA9IGxpc3RcbiAgdGhpcy5nZXQgPSBnZXRcblxuICBmdW5jdGlvbiBsaXN0KCkge1xuICAgIHJldHVybiByZXNvdXJjZS5nZXRMaXN0KClcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldChpZCkge1xuICAgIHJldHVybiByZXNvdXJjZS5vbmUoaWQpLmdldCgpXG4gIH1cbn1cbiIsImFuZ3VsYXJcbiAgLm1vZHVsZSgncHJvdG90eXBlJylcbiAgLmNvbmZpZyhQcm9taXNlc0NvbmZpZylcblxuZnVuY3Rpb24gUHJvbWlzZXNDb25maWcoJHFQcm92aWRlcikge1xuICAkcVByb3ZpZGVyLmVycm9yT25VbmhhbmRsZWRSZWplY3Rpb25zKGZhbHNlKVxufVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlcy9hbmd1bGFyIn0=
