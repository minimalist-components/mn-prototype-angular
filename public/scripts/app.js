"use strict";function ApiConfig(RestangularProvider){RestangularProvider.setBaseUrl("https://private-a82ea-samples9.apiary-mock.com")}function appConfig($locationProvider,$stateProvider){$locationProvider.html5Mode(!0),$stateProvider.state("app",{"abstract":!0,views:{main:{templateUrl:"templates/app.template.html"}}})}function AuthenticationConfig($authProvider){$authProvider.loginUrl="",$authProvider.authHeader="Authorization",$authProvider.tokenType="Bearer",$authProvider.authToken="",$authProvider.storageType="localStorage"}function AuthenticationService($auth){this.login=function(user){return $auth.login(user)},this.logout=function(){return $auth.logout()},this.status=function(){return $auth.isAuthenticated()},this.user=function(){return $auth.getPayload()}}function HomeConfig($stateProvider){$stateProvider.state("app.home",{url:"/",views:{"content@app":{templateUrl:"templates/home.template.html",controller:"HomeController",controllerAs:"home",resolve:{users:function(Users){return Users.list()}}}}})}function HomeController(users){this.users=users}function loadingConfig(cfpLoadingBarProvider){cfpLoadingBarProvider.includeSpinner=!1,cfpLoadingBarProvider.includeBar=!0}function LoginConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{main:{templateUrl:"templates/login.template.html",controller:"LoginController",controllerAs:"login"}}})}function LoginController(AuthenticationService,$state){function authenticate(){function redirectToHome(){$state.go("app.home")}AuthenticationService.login(this.credentials).then(redirectToHome)}var username=void 0,password=void 0;this.credentials={username:username,password:password},this.authenticate=authenticate}function LoginRun($rootScope,$state,AuthenticationService){function requireAuthentication(event,toState){var stateRequireLogin=toState.name.startsWith("app."),isAuthenticated=AuthenticationService.status();stateRequireLogin&&!isAuthenticated&&(event.preventDefault(),$state.go("login"))}$rootScope.$on("$stateChangeStart",requireAuthentication)}function PromisesConfig($qProvider){$qProvider.errorOnUnhandledRejections(!1)}function UsersService(Restangular){function list(){return resource.getList()}var resource=Restangular.all("users");this.list=list}angular.module("prototype",["ui.router","satellizer","mn-form","mn-input","restangular","angular-loading-bar"]),ApiConfig.$inject=["RestangularProvider"],angular.module("prototype").config(ApiConfig),appConfig.$inject=["$locationProvider","$stateProvider"],angular.module("prototype").config(appConfig),AuthenticationConfig.$inject=["$authProvider"],angular.module("prototype").config(AuthenticationConfig),AuthenticationService.$inject=["$auth"],angular.module("prototype").service("AuthenticationService",AuthenticationService),HomeConfig.$inject=["$stateProvider"],angular.module("prototype").config(HomeConfig),HomeController.$inject=["users"],angular.module("prototype").controller("HomeController",HomeController),loadingConfig.$inject=["cfpLoadingBarProvider"],angular.module("prototype").config(loadingConfig),LoginConfig.$inject=["$stateProvider"],angular.module("prototype").config(LoginConfig),LoginController.$inject=["AuthenticationService","$state"],angular.module("prototype").controller("LoginController",LoginController),LoginRun.$inject=["$rootScope","$state","AuthenticationService"],angular.module("prototype").run(LoginRun),PromisesConfig.$inject=["$qProvider"],angular.module("prototype").config(PromisesConfig),UsersService.$inject=["Restangular"],angular.module("prototype").service("Users",UsersService);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
